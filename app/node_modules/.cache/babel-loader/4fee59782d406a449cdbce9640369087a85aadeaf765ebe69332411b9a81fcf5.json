{"ast":null,"code":"var _jsxFileName = \"/Users/dubemeneh/data-gg/app/src/components/Admin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { handleSignUp } from '../handles'; // Ensure this path is correct based on your project structure\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Admin() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    const fetchTransactions = async () => {\n      // Assuming no specific query is needed for fetching all transactions\n      try {\n        const data = await handleTransactions({});\n        setTransactions(data);\n      } catch (error) {\n        console.error('Error getting transactions', error);\n      }\n    };\n    fetchTransactions();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AppContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"Text\",\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), transactions.map((transaction, index) => {\n      var _transaction$user_id, _transaction$user_id2, _transaction$file_id, _transaction$file_id2;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"List\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"User ID: \", (_transaction$user_id = transaction.user_id) === null || _transaction$user_id === void 0 ? void 0 : _transaction$user_id._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"User Name: \", (_transaction$user_id2 = transaction.user_id) === null || _transaction$user_id2 === void 0 ? void 0 : _transaction$user_id2.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"File ID: \", (_transaction$file_id = transaction.file_id) === null || _transaction$file_id === void 0 ? void 0 : _transaction$file_id._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"File Name: \", (_transaction$file_id2 = transaction.file_id) === null || _transaction$file_id2 === void 0 ? void 0 : _transaction$file_id2.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Timestamp: \", new Date(transaction.timeStamp).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Uploaded: \", transaction.up ? \"Yes\" : \"No\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n_s(Admin, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n_c = Admin;\nexport default Admin;\nvar _c;\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","handleSignUp","jsxDEV","_jsxDEV","Admin","_s","transactions","setTransactions","fetchTransactions","data","handleTransactions","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","transaction","index","_transaction$user_id","_transaction$user_id2","_transaction$file_id","_transaction$file_id2","user_id","_id","name","file_id","Date","timeStamp","toLocaleString","up","_c","$RefreshReg$"],"sources":["/Users/dubemeneh/data-gg/app/src/components/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { handleSignUp } from '../handles'; // Ensure this path is correct based on your project structure\nimport './App.css';\n\nfunction Admin() {\n    const [transactions, setTransactions] = useState([]);\n\n    useEffect(() => {\n        const fetchTransactions = async () => {\n            // Assuming no specific query is needed for fetching all transactions\n            try {\n                const data = await handleTransactions({});\n                setTransactions(data);\n            } catch (error) {\n                console.error('Error getting transactions', error);\n            }\n        };\n\n        fetchTransactions();\n    }, []);\n\n    return (\n        <div className=\"AppContainer\">\n            <h1 className='Text'>Transactions</h1>\n            {transactions.map((transaction, index) => (\n                <div className=\"List\" key={index}>\n                    <div>User ID: {transaction.user_id?._id}</div>\n                    <div>User Name: {transaction.user_id?.name}</div>\n                    <div>File ID: {transaction.file_id?._id}</div>\n                    <div>File Name: {transaction.file_id?.name}</div>\n                    <div>Timestamp: {new Date(transaction.timeStamp).toLocaleString()}</div>\n                    <div>Uploaded: {transaction.up ? \"Yes\" : \"No\"}</div>\n                </div>\n            ))}\n        </div>\n    );\n}\n\nexport default Admin;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}